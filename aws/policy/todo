aws iam create-role \
  --role-name CruddurServiceExecutionRole \
  --assume-role-policy-document file://aws/policy/service-assume-role-execution-policy.json

aws iam attach-role-policy --policy-arn arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy --role-name CruddurServiceExecutionRole

aws iam put-role-policy \
  --policy-name CruddurServiceExecutionPolicy \
  --role-name CruddurServiceExecutionRole \
  --policy-document file://aws/policy/service-execution-policy.json

aws iam create-role \
  --role-name CruddurTaskRole \
  --assume-role-policy-document file://aws/policy/task-assume-role-execution-policy.json

aws iam put-role-policy \
  --policy-name SSMAccessPolicy \
  --role-name CruddurTaskRole \
  --policy-document file://aws/policy/task-execution-policy.json

aws ecs create-cluster \
  --cluster-name cruddur \
  --service-connect-defaults namespace=cruddur

aws ecs register-task-definition --cli-input-json file://aws/task_definitions/backend-flask.json
aws ecs create-service --cli-input-json file://aws/ecs_services/service-backend-flask.json

aws ecs register-task-definition --cli-input-json file://aws/task_definitions/frontend-react-js.json
aws ecs create-service --cli-input-json file://aws/ecs_services/service-frontend-react-js.json


docker build -t backend-flask .
docker tag backend-flask:latest "$ECR_BACKEND_FLASK_URL":latest
docker push "$ECR_BACKEND_FLASK_URL":latest


docker build \
  --build-arg REACT_APP_BACKEND_URL="https://api.moon-out.xyz" \
  --build-arg REACT_APP_AWS_PROJECT_REGION="$AWS_DEFAULT_REGION" \
  --build-arg REACT_APP_AWS_COGNITO_REGION="$AWS_DEFAULT_REGION" \
  --build-arg REACT_APP_AWS_USER_POOLS_ID="$AWS_COGNITO_USER_POOL_ID" \
  --build-arg REACT_APP_CLIENT_ID="${AWS_COGNITO_USER_POOL_CLIENT_ID}" \
  -t frontend-react-js \
  -f Dockerfile.prod .
docker tag frontend-react-js:latest "$ECR_FRONTEND_REACT_URL":latest
docker push "$ECR_FRONTEND_REACT_URL":latest



