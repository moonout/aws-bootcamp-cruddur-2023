#!/usr/bin/env python

import sys
from datetime import datetime
import boto3
from pathlib import Path
import json

p = Path(__file__).parent.parent.parent.parent
sys.path.append(p.as_posix())

from lib.db import query_all

MESSAGE_GROUP_UUID = "366a3727-4f86-4482-8229-979fa59b17ab"
TABLE_NAME = "cruddur-messages"

my_user_uuid = "d8a9fd83-2251-4fdf-b295-d8d718da0b7b"

if len(sys.argv) == 2 and sys.argv[1] == "prod":
    attrs = {}
else:
    attrs = {"endpoint_url": "http://localhost:8000"}

ddb_client = boto3.client("dynamodb", **attrs)
year = str(datetime.now().year)

query_params = {
    "TableName": TABLE_NAME,
    "KeyConditionExpression": "pk = :pk AND begins_with(sk, :year)",
    "ScanIndexForward": False,
    "Limit": 50,
    "ExpressionAttributeValues": {":pk": {"S": f"MSG#{MESSAGE_GROUP_UUID}"}, ":year": {"S": year}},
    "ReturnConsumedCapacity": "TOTAL",
}

# query the table
response = ddb_client.query(**query_params)


print(json.dumps(response["ConsumedCapacity"], sort_keys=True, indent=2))

items = response["Items"]

for item in reversed(items):
    sender_handle = item["user_handle"]["S"]
    message = item["message"]["S"]
    timestamp = item["sk"]["S"]
    dt_object = datetime.strptime(timestamp, "%Y-%m-%dT%H:%M:%S.%f%z")
    formatted_datetime = dt_object.strftime("%Y-%m-%d %H:%M")
    print(f"{sender_handle: <16}{formatted_datetime: <22}{message[:40]}...", timestamp)
